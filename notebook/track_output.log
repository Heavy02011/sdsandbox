Starte klassisches Python Track-Generierungs-Skript...
Verwende Konfiguration aus trackgenlib (via config.yaml):
  Track-Breite: 10.0
  Beispiel Skript-Pfad (Mode 1): /workspaces/sdsandbox/notebook/tracks/scripted_track1.txt
  Beispiel CSV-Pfad (Mode 2): /workspaces/sdsandbox/notebook/tracks/centerline1.csv
  Glättungsfenster: 3

Gewählter Modus (ggf. via CLI überschrieben): 4
Track soll geschlossen werden (ggf. via CLI überschrieben): True
--- Starte Track-Generierung/Laden für Modus: 4 ---
Generiere zufälligen Polar-Track mit konfigurierten Bereichen...
Verwende generate_random_polar_arc_track für Mode 4...
Anzahl der Punkte in der Mittellinie: 110
Erste 3 Punkte der Mittellinie: [(83.9507701312723, 65.39738313745042), (84.48316189091186, 65.8619189101474), (83.25506446439135, 67.40023462955931)]
Letzte 3 Punkte der Mittellinie: [(92.89077437858734, 54.51316107336398), (88.86236828452304, 60.008602763174515), (83.9507701312723, 65.39738313745042)]
--- Ende Track-Generierung/Laden ---

--- Starte Track-Visualisierung ---
Berechne Streckenbegrenzungen...
Streckenbegrenzungen erfolgreich berechnet.
Stelle Track dar...
Track gespeichert als: /workspaces/sdsandbox/notebook/output_images/generated_track_20250522_061634.png
--- Ende Track-Visualisierung ---

Das Plot-Fenster muss möglicherweise manuell geschlossen werden, um das Skript zu beenden.
